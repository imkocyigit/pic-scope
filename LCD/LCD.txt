/* 
 * File:   ledy.c
 * Author: mete
 *
 * Created on January 29, 2019, 9:39 AM
 */
#include <pic18f4550.h>
#include <stdio.h>
#include <xc.h>
#define _XTAL_FREQ = 4000000; // xtal freq assigned as 4MHz.
#pragma config PLLDIV = 5 , CPUDIV = OSC1_PLL2 , USBDIV = 2

//#pragma config FOSC = EC_EC //OUTPUT RA6

#pragma config FOSC = XT_XT
//#pragma config FOSC = HS
#pragma config FCMEN = OFF                                 
#pragma config BORV = 3
#pragma config WDT = OFF
#pragma config LVP = OFF
#pragma config CPB = OFF
#pragma config CPD = OFF   

#define E   LATDbits.LATD2;

#define RS  LATDbits.LATD1;
#define RW  LATDbits.LATD0;
#define DB0 LATDbits.LATD3;
#define DB1 LATEbits.LATE2;
#define DB2 LATEbits.LATE1;
#define DB3 LATCbits.LATC6;
#define DB4 LATCbits.LATC7;
#define DB5 LATDbits.LATD4;
#define DB6 LATDbits.LATD5;
#define DB7 LATDbits.LATD6;


void timer_ms(unsigned int n) //1ms'lik delay fonksiyonu.for clock calibration.
{
    unsigned int i;
    T0CON = 0x82;                                       
    for(i=0;i<n;i++) {
        TMR0 = 65535 - (4000000/(4*8*1000));         
        while(!TMR0IF);                                 
        TMR0IF=0;                                       
    }
    T0CON = 0x00;                                       
}


void delayzz()  {
    int i, j;
    for(i=0;i<500;i++) {
        for(j=0;j<2;j++)    {           /* Well its Just a Timer */           
        }    
    }   
}

void tetikle() { // Enable pinini high to low yaparak tetiklemeyi saglar.
    
    LATDbits.LATD2 =1;
    LATDbits.LATD2 =0;
    delayzz();
    LATDbits.LATD2 =1;
}


void displaySil(){ //ekrani temizler. imleci basa yollar.
    
    LATDbits.LATD1 = 0; // RS
    LATDbits.LATD0 = 0; // RW
    
    LATDbits.LATD6 = 0; // DB7
    LATDbits.LATD5 = 0; // DB6
    LATDbits.LATD4 = 0; // DB5
    LATCbits.LATC7 = 0; // DB4
    
    LATCbits.LATC6 = 0; // DB3
    LATEbits.LATE1 = 0; // DB2
    LATEbits.LATE2 = 0; // DB1
    LATDbits.LATD3 = 1; // DB0

    delayzz();
    tetikle();
}

void dispONOFF(){ // Display acik. imlec kapali ve yanip sonmez.
    
    LATDbits.LATD1 = 0; // RS
    LATDbits.LATD0 = 0; // RW
    
    LATDbits.LATD6 = 0; // DB7
    LATDbits.LATD5 = 0; // DB6
    LATDbits.LATD4 = 0; // DB5
    LATCbits.LATC7 = 0; // DB4
    
    LATCbits.LATC6 = 1; // DB3
    LATEbits.LATE1 = 1; // DB2
    LATEbits.LATE2 = 0; // DB1
    LATDbits.LATD3 = 0; // DB0
    delayzz();
    tetikle();
}

void setFunc(){ // Fonksiyon ayarlari. Satir 1,5*8 matrix , 8 bit comm.
    
    LATDbits.LATD1 = 0; // RS
    LATDbits.LATD0 = 0; // RW
    
    LATDbits.LATD6 = 0; // DB7
    LATDbits.LATD5 = 0; // DB6
    LATDbits.LATD4 = 1; // DB5
    LATCbits.LATC7 = 1; // DB4
    
    LATCbits.LATC6 = 0; // DB3
    LATEbits.LATE1 = 0; // DB2
    LATEbits.LATE2 = 0; // DB1
    LATDbits.LATD3 = 0; // DB0
    delayzz();
    tetikle();
}

void setInput(){ // Giris ayarlari. LCD'de gosterilen her karakterden
    //sonra imlec 1 saga kayar.
    
    LATDbits.LATD1 = 0; // RS
    LATDbits.LATD0 = 0; // RW
    
    LATDbits.LATD6 = 0; // DB7
    LATDbits.LATD5 = 0; // DB6
    LATDbits.LATD4 = 0; // DB5
    LATCbits.LATC7 = 0; // DB4
    
    LATCbits.LATC6 = 0; // DB3
    LATEbits.LATE1 = 1; // DB2
    LATEbits.LATE2 = 1; // DB1
    LATDbits.LATD3 = 0; // DB0
    delayzz();
    tetikle();
}

void setDDRAM_ADDR( unsigned char D6,unsigned char D5,unsigned char D4,unsigned char D3,unsigned char D2,unsigned char D1,unsigned char D0 ){
    // addres must be  6-bit address.
    LATDbits.LATD1 = 0; // RS
    LATDbits.LATD0 = 0; // RW
    
    LATDbits.LATD6 = 1; // DB7
    
    LATDbits.LATD5 = D6; // DB6
    LATDbits.LATD4 = D5; // DB5
    LATCbits.LATC7 = D4; // DB4
    
    LATCbits.LATC6 = D3; // DB3
    LATEbits.LATE1 = D2; // DB2
    LATEbits.LATE2 = D1; // DB1
    LATDbits.LATD3 = D0; // DB0
    delayzz();
    tetikle();
}

void writeToRAM(unsigned char D7,unsigned char D6,unsigned char D5,unsigned char D4,unsigned char D3,unsigned char D2,unsigned char D1,unsigned char D0){ //girilen degeri o anki cursora yazar.
    
    LATDbits.LATD1 = 1; // RS
    LATDbits.LATD0 = 0; // RW
    
    LATDbits.LATD6 = D7; // DB7
    
    LATDbits.LATD5 = D6; // DB6
    LATDbits.LATD4 = D5; // DB5
    LATCbits.LATC7 = D4; // DB4
    
    LATCbits.LATC6 = D3; // DB3
    LATEbits.LATE1 = D2; // DB2
    LATEbits.LATE2 = D1; // DB1
    LATDbits.LATD3 = D0; // DB0
    delayzz();
    tetikle();
    
}




void main(void) {

    int result=0;
                 // OUTPUT PINS FOR LCD
    TRISD = 0x00; // All PORT D pins assigned as output.
    TRISCbits.TRISC6 = 0;
    TRISCbits.TRISC7 = 0;
    TRISEbits.TRISE2 = 0;
    TRISEbits.TRISE1 = 0;
    
    TRISAbits.TRISA0=1; // Analog giris input olarak ayarlandi.
     
    TRISDbits.TRISD7=0;
    
                   //ADC configs
    ADCON0=0b00000000; //Channel 0 (AN0)selected. ADC is disabled.
    ADCON1=0b00001110; // AN0 set as analog and VREFs set as Vdd and Vss.
    ADCON2=0b10001100; //Right justified. 4TOSC(FOSC/4). 2Tad.
    
    ADCON0bits.ADON = 1; // ADC enabled.
    
    dispONOFF();
    
    displaySil();
    
    setFunc();
    
    setInput();
    
    writeToRAM(0,1,0,0,0,1,1,0); // F
 
    writeToRAM(0,1,0,1,0,0,1,0); // R

    writeToRAM(0,1,0,0,0,1,0,1); // E

    writeToRAM(0,1,0,1,0,0,0,1); // Q

    writeToRAM(0,0,1,1,1,0,1,0); // :

   
     
    while (1)   {
        
        delayzz(); // Required time for Acquisition.
       
        ADCON0bits.GO=1; // Bu bit 1 oldugu surece cevirim bitmedi demek.
        
        while(ADCON0bits.GO == 1){}; // wait for conversion.
        
        result = (ADRESH<<8)+ADRESL;
        
        LATDbits.LATD7 = 1;
        timer_ms(1000);
        LATDbits.LATD7 = 0;
        timer_ms(1000);
        
        
        
    }
    
}

